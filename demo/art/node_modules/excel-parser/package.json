{
  "name": "excel-parser",
  "version": "0.2.2",
  "description": "node.js excel parser. Supports xlsx, xls",
  "homepage": "https://github.com/vxtindia/excel-parser",
  "main": "excelParser.js",
  "scripts": {
    "test": "grunt nodeunit"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/vxtindia/excel-parser.git"
  },
  "bugs": {
    "url": "https://github.com/vxtindia/excel-parser/issues"
  },
  "keywords": [
    "excel",
    "spreadsheet",
    "xls",
    "xlsx"
  ],
  "author": {
    "name": "Shekhar R. Thawali",
    "email": "shekhar.thawali@vxtindia.com"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/vxtindia/datlas/blob/master/LICENSE-MIT"
    }
  ],
  "engines": {
    "node": "~0.8.2"
  },
  "dependencies": {
    "underscore": "~1.4.4",
    "temp": "~0.5.0",
    "async": "~0.2.7"
  },
  "devDependencies": {
    "grunt": "~0.4.1",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-watch": "~0.3.1",
    "grunt-contrib-internal": "~0.4.3"
  },
  "readme": "# excel-parser\n\n[node](http://nodejs.org/) wrapper for parsing spreadsheets. Supports xls, xlsx.\n\nYou can install this module using [npm](http://github.com/isaacs/npm):\n\n    npm install excel-parser\n\nRequires [python](http://www.python.org/) to be installed\n\nFor system-specific installation view the [Wiki](https://github.com/vxtindia/excel-parser/wiki)\n\n## API\n\n<a name=\"worksheets\" />\n### worksheets(options, callback(err, worksheets))\n\nGet all the worksheets list in given spreadsheet where options are the object of arguments. The result is returned as a object.\n\n__Arguments__\n\n* inFile - Filepath of the source speadsheet\n\n__Example__\n\n```js\nvar excelParser = require('excel-parser');\nexcelParser.worksheets({\n  inFile: 'my_file.in'\n}, function(err, worksheets){\n  if(err) console.error(err);\n  consol.log(worksheets);\n});\n```\n__Sample output__\n\n```json\n[\n  {'name': 'Sheet1', id: 1},\n  {'name': 'Sheet2', id: 2}\n]\n```\n---------------------------------------\n<a name=\"parse\" />\n### parse(options, callback(err, records))\n\nParse spreadsheet with given optinos as an arguments. The result is returned as an array.\n\n__Arguments__\n\n* inFile - Filepath of the source speadsheet\n* worksheet - Worksheet name or Id to parse. If nothing specified then default\nis 0 and parsed all the worksheets.\n* skipEmpty - boolean `true` or `false`. Pass true if want to skip empty cells from spreadsheet.\n* searchFor - Object with `term` and `type` values. If you want to get limited\nmatching rows from spreadsheet then add the matching string array and one of the following search type.\n** 'strict' is for the case sensetive and exact string matched.\n** 'loose' is for the case insensetive and match relatively.\n\n__Example__\n\n```javascript\nvar excelParser = require('excel-parser');\n\nexcelParser.parse({\n  inFile: 'my_file.in',\n  worksheet: 1,\n  skipEmpty: true,\n  searchFor: {\n    term: ['my serach term'],\n    type: 'loose'\n  }\n},function(err, records){\n  if(err) console.error(err);\n  consol.log(records);\n});\n```\n__Sample output__\n\n```json\n[\n  ['ID', 'Name', 'City'],\n  ['1', 'joe', 'Sandy Springs'],\n  ['1', 'cole', 'City of Industry']\n]\n```\n\n## Running Tests\n\nThere are unit tests in `test/` directory. To run test suite first run the following command to install dependencies.\n\n    npm install\n\nthen run the tests:\n\n    grunt nodeunit\n\nNOTE: Install `npm install -g grunt-cli` for running tests.\n\n## License\n\nCopyright (c) 2013 Shekhar R. Thawali\n\nLicensed under the MIT license.",
  "readmeFilename": "README.md",
  "_id": "excel-parser@0.2.2",
  "_shasum": "2c2775fe440c1584f9dfdbc8220ed8cf29980d52",
  "_from": "excel-parser@",
  "_resolved": "http://r.cnpmjs.org/excel-parser/download/excel-parser-0.2.2.tgz"
}
